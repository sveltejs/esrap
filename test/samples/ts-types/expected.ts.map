{
  "version": 3,
  "names": [],
  "sources": [
    "input.js"
  ],
  "sourcesContent": [
    "type A = [x: number, y: string];\ntype B = { a: string; b: number };\n\ntype C = 'foo' | 'bar';\ntype D = C | A | B | 'foobar';\n\ntype E = A & B;\ntype F = C & 'foobar';\n\ntype G = { [a in C]: string };\n\ntype H = this;\ntype I = `Hello, ${keyof C}`;\n\ntype Bird = { legs: 2 };\ntype Dog = { legs: 4 };\ntype Wolf = { legs: 4 };\ntype Animals = Bird | Dog | Wolf;\ntype HasFourLegs<Animal> = Animal extends { legs: 4 } ? Animal : never;\ntype FourLegs = HasFourLegs<Animals>;\n\ntype T = [('a' | 'b')?];\n\ntype CT = new (tpl: TemplateStringsArray, ...args: Array<unknown>) => (replacements: B) => A;\n\ntype X = [...number[]];\ntype TupleWithRest = [number, ...(1 extends 2 ? string[] : number[])];\n\n// commented because acorn doesn't support intrinsic but oxc does\n// type Uppercase<S extends string> = intrinsic;\n"
  ],
  "mappings": "KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM;KACzB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM;KAE1B,CAAC,GAAG,KAAK,GAAG,KAAK;KACjB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ;KAExB,CAAC,GAAG,CAAC,GAAG,CAAC;KACT,CAAC,GAAG,CAAC,GAAG,QAAQ;KAEhB,CAAC,KAAM,CAAM,IAAD,CAAC,GAAG,MAAM;KAEtB,CAAC,GAAG,IAAI;KACR,CAAC,mBAAmB,CAAC;KAErB,IAAI,KAAK,IAAI,EAAE,CAAC;KAChB,GAAG,KAAK,IAAI,EAAE,CAAC;KACf,IAAI,KAAK,IAAI,EAAE,CAAC;KAChB,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI;KAC3B,WAAW,CAAC,MAAM,IAAI,MAAM,WAAW,IAAI,EAAE,CAAC,KAAK,MAAM,GAAG,KAAK;KACjE,QAAQ,GAAG,WAAW,CAAC,OAAO;KAE9B,CAAC,KAAK,GAAG,GAAG,GAAG;KAEf,EAAE,QAAQ,GAAyB,EAApB,oBAAoB,KAAK,IAAI,EAAE,KAAK,CAAC,OAAO,OAAO,YAAe,EAAD,CAAC,KAAK,CAAC;KAEvF,CAAC,OAAO,MAAM;KACd,aAAa,IAAI,MAAM,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,KAAK,MAAM;;;"
}